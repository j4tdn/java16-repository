=== Từ vesion JAVA07 trở về trước ===

1.Tính chất đóng gói là gì. Áp dụng ở đâu trong code ?
--> Tính đóng gói được thể hiện qua các access modifier
+ Private: Class
+ Public: Anywhere
+ Defaukt & Protected: Package
+ Protected: Can be used in different package with sub classes

--> public: Tạo ra các hàm utilities sử dụng bất kỳ nơi nào
--> default: clearUI --> sử dụng trong package view(code giao diện)

2. Tính đa hình
+ Phương thức: 1 phương thức(sum, sub) nhưng có nhiều thể hiện, chức năng
--> Overloading: Hai hoặc nhiều phương thức gọi là overloading nếu
	+ Cùng 1 class
	+ Trùng tên
	+ Khác nhau số lượng tham số || kiểu dữ liệu truyền vào của tham số
	
--> Overriding: Hai hoặc nhiều phương thức gọi la overriding nếu
	+ Thuộc 2 hoặc nhiều class có quan hệ thừa kế
	+ Override để định nghĩa lại nội dung trong class con
	+ Ví dụ: toString
	
+ Đối tượng: 1 đối tượng nhưng có nhiều thể hiện
--> Ví dụ: Person --> Student, Employee, Child
--> Mục đích: + Tạo ra 1 tập các đối tượng lưu chung 1 mảng, danh sách
			  + dễ dàng convert KDL trong phạm vi cha con
			  
			  
3. Kế thừa: 
+ Mục đính: Tăng khả năng rếu code
KDL Cha: Class, Abstract Class, Interface
KDL Con: Class, Abstract Class, Interface

Class extends Class, Abstract
Class implement Interface

Abstract Class extends Abstract Class
Abstract Class implement Interface

Interface extends Interface

??? Phân biệt abstract class và interface
+ Abstract class: Chứa hàm trừu tượng và hàm bình thường
  Chỉ extend được từ duy nhất 1 class, abstract class - single class
  
+ Interface: Chỉ chứa hàm trừu tượng và hàm bth
  Có thể implement từ nhiều interface - multiple implements
+ Interface: Chỉ chứa hàm trừu tượng

=== Từ vesion JAVA08 trở về sau ===
+ Interface: chứa hàm trừu tượng và hàm bth 
  Có thế implement từ nhiều interface

+ Vì sao từ JAVA08 Java hỗ trợ non-abstract methods trong interface
+ Mục đích và khác gì giữa abstract class và interface