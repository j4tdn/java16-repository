1. tính chất đóng gói là gì
--> tính chất đóng gói thể hiện qua các access modfier 
+private: Class
+pulic: Project(mọi nơi)
+default & protected: Package
protected: có thể dùng bên ngoiaf package với class con(class con của class dùng access modifier là protected) 

--> áp dụng ở đâu trong code
-->public: tạo ra các hàm utilities sử dụng ở bất kỳ nơi nào
-->default: clearUI --> sử dụng tring package view(code giao diện)

2. Tính chất đa hình
+phương thức: 1 phương thức(sum, sub) nhưng có nhiều thể hiện,chức năng,trạng thái
-->Overload: Hai hoặc nhiều phương thức gọi là overloading nếu
	+ cùng 1 class
	+ cùng tên
	+ khác nhau số lượng tham số || kiểu dữ liệu truyền vào của tham số
	
-->Overide: Hai hoặc nhiều phương thức gọi là overriding nếu 
	+ Thuộc 2 hoặc nhiều class có quan hệ thừa kế
	+ override để định nghĩa lại nội dung trong class con
	vd: toString  
	
+ Đối tượng: 1 đối tượng nhưng có nhiều thể hiện 
--> Ví dụ: Person --> Student.Employee,Child
--> Mục Đích: tạo ra 1 tập các đối tượng lưu chung 1 mảng, danh sách
		   : Dễ dàng convert KDL trong phạm vi cha con
			
3. Kế thừa
+ Mục đích: Tăng khả năng reuse code 
KDL Cha: Class, Abstract Class, Interface
KDL Con: Class, Abstract Class, Interface

Class extends Class, Abstract Class
Class implements Interface

Abstract Class extends Abstract Class, Class(vô nghĩa)
Abstract Class implements Interface

Interface extends Interface

???? Phân biệt abstract class và interface
+Abstract class: Chứa hàm trừu tượng và hàm bình thường
 Chỉ extend được từ duy nhất 1 class, abstract class - single extends
+Interface: Chỉ chứa hàm trừu tượng
 Có thể implements từ nhiều interface - multiple implements

==== Từ version JAVA08 trở về trước ====
+ Interface: Chứa hàm trừu tượng và hàm bình thường
  Có thể implement từ nhiều interface
  
+ Vì sao từ JAVA08 Java hỗ trợ non-abstract methods trong interface
+ Mục đích và khác gì giữa abstract class