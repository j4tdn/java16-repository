Override: Chỉ override cho phương thức, không override được cho thuộc tính

1. Tính chất đóng gói là gì ?
 - Tính đóng gói thể hiện qua các access modifier
 + Private: Class
 + Public: anywhere
 + Default + Protected: Package
 + Protected: Can be use in different package with subclass
--> Áp dụng ở đâu trong code ?
Áp dụng trong code
 --> public: Tạo ra các hàm utilities sử dụng ở bất kỳ nơi nào
 --> default: clearID: sử dụng trong class view (code giao diện)
 
 2. Tính đa hình
+ Phương thức: 1 phương thức(sum,sub) nhưng có nhiều thể hiện, chức năng
 --> Overloading: Hai hoặc nhiều phương thức gọi là overloading nếu:
 + Cùng 1 class
 + Trùng tên
 + Khác nhau số lượng tham số || Kiểu dữ liệu truyền vào của tham số
 
 --> Overriding: Hai hoặc nhiều phương thức được gọi là Overriding nếu
 + Thuộc 2 hoặc nhiều class có quan hệ thừa kế 
 + Override để định nghĩa lại nội dung trong class con
 + Ví dụ: toString
 
+ Đối tượng: 1 đối tượng nhưng có nhiều thể hiện
--> ví dụ: Person --> Student, Employee, Child
Mục đích:
 + Giúp tạo ra 1 tập hợp các kiểu dữ liệu cha, con vào 1 tập hợp dễ dàng
 + Giúp dễ dàng chuyển đổi kiểu dữ liệu cho nhau
 
 3. Tính thừa kế
 + Khi con kế thừa cha, nên override lại (hoặc thông báo lỗi)
 Ví dụ: Square, Rectangle bắt buộc phải override lại phương thức draw, cals từ Shape
 Hàm Draw, cals bên trong Shape vô nghĩa nên mong muốn hàm draw, calS không có thân hàm