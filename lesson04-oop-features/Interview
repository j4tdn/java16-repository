==== Từ version JAVA07 trở về trước===

1. Tính đóng gói là gì? ENSCAPSULATION
--> Áp dụng ở đâu trong code: thể hiên qua các access modifier
 + private : class
 + public: anywhere
 + Defaut & Protected: Package
 + Protected: can be used in fifferent package with sub classes

--> public: tạo ra các hàm Utilities sử dụng ở bất kì nơi nào
--> Default: clearUI --> Sử dung trong pakage view(code giao diên)

2. Tính chất đa hình: polimophism
 * Phương thức: 1 phương thức(sum, sub) nhưng có nhiều thể hiện chức năng
--> Overloading: hai hoặc nhiều phương thức gọi là overloading nếu
  + Cùng 1 class
  + Trùng tên
  + Khác nhau số lượng tham số || kiểu dữ liệu truyền vào của tham số

--> Override: Hai hoặc nhiều phương thức gọi là overriding nếu 
  + Thuộc 2 hoặc nhiều class có quan hệ thừa kế
  + Override để định nghĩa lại nội dung trong class con
  + ví dụ: toString
  
  * Đối tượng: 1 đối tượng nhưng có nhiều thể hiên 
--> ví dụ: Person --> Studen, Employee, Child
--> Mục địch: Tạo ra 1 tập các đối tượng lưu chung 1 mảng, danh saach. Dễ dạng conver KDL trong phạm vi cha con

3, KẾ THỪA INHERITANCE
Tính chất trừu tượng thể hiện quathể hện qua Class, Abstract Class, Interface, Abstract method
vd khi muốn tạo ra hàm trong KDL, hàm đó chưa có nội dung cụ thể
  * ==> tạo ra hàm trừu tượng trong Abstract Class, Interface,
+ Mục đích: tăng khả năng reuse code
KDL cha: Class, Abstract Class, Interface
KDL con: Class, Abstract Class, Interface

Class extends Class, Abstract Class
Class implement Interface

Abstract Class extends Abstract Class
Abstract Class implement Interface

Interface extends Interface
 // biến trong interface phải có giá trị vì k thể override 1 thuộc tính được
- không thể đa thừa kế, có thể đa thực thi(inplement)
* kế thừa: 1 class k thê extends từ nhiều class
Nguyên nhân: class con khi kế thừa từ class cha thì k bắt buộc override method từ cha
TH khi các class cha có hàm giông nhau, lúc này con k biêt gọi từ lớp cha nào

* Khác nhau abstract class, interface
interface: chỉ chứa hàm trừu tượng, có thể implement từ nhiều interface(MULTIPLE IMPLEMENT)
abstract class: chứa hàm trừu tượng và hàm bth
			cha abstract class con k thể multiple extend chỉ extend được 1 class, abstract class(single extend)

=== Từ version JAVA8 trở về tước ===
+ Interface: chứa hàm trừ tượng và hàm bình thường
       		có thể implement từ nhiều interface
+abstract class: chứa hàm trừu tượng và hàm bth
 			cha abstract class con k thể multiple extend chỉ extend được 1 class, abstract class
 			
 k hỗ trợ đa thừa kế java 8 về sau interface có thân hàm nên hỗ trợ tương tự đa thừa kế
 + vì sau từ java 8 hỗ trợ non-abstract method trong interface
 + mục đích và khác gì giưa abstract và interface
 
 có thể chứa hàm bình thường vì giúp giảm trùng lặp code






